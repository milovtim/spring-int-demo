<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/integration"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:c="http://www.springframework.org/schema/c"
             xmlns:script="http://www.springframework.org/schema/integration/scripting"
             xmlns:stream="http://www.springframework.org/schema/integration/stream"
             xmlns:task="http://www.springframework.org/schema/task"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd http://www.springframework.org/schema/integration/scripting http://www.springframework.org/schema/integration/scripting/spring-integration-scripting.xsd http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder />
    <context:annotation-config />

    <beans:bean id="dynamicPeriodicTrigger"
                class="org.springframework.integration.util.DynamicPeriodicTrigger"
                p:initialDelay="1000"
                p:fixedRate="true"
                c:_0="${pollPeriod}" />

    <inbound-channel-adapter expression="new java.util.Random().nextInt(100)"
                             channel="inputChannel" >
        <poller trigger="dynamicPeriodicTrigger" />
    </inbound-channel-adapter>

    <task:executor id="worker-executor" pool-size="0-2" queue-capacity="10" />
    <channel id="inputChannel">
        <dispatcher task-executor="worker-executor" />
        <interceptors>
            <wire-tap channel="outputLogger" />
        </interceptors>
    </channel>

    <enricher input-channel="inputChannel"
              output-channel="resultLogger"

              reply-timeout="5000"
              error-channel=""

              request-channel="serviceRequestChannel"
              reply-channel="serviceResponseChannel">
        <header name="res" expression="payload" />
    </enricher>


    <stream:stdout-channel-adapter id="outputLogger"
                                   append-newline="true"/>

    <logging-channel-adapter id="resultLogger"
                             logger-name="result"
                             expression="headers['res']"
                             level="DEBUG"/>


    <channel id="serviceRequestChannel" />
    <channel id="serviceResponseChannel" />

    <service-activator input-channel="serviceRequestChannel"
                       output-channel="serviceResponseChannel">
        <script:script lang="groovy">
        import java.util.concurrent.TimeUnit

        TimeUnit.SECONDS.sleep(2)
        payload * 2
        </script:script>
    </service-activator>


    <context:mbean-server id="mBeanServer"/>
    <context:mbean-export default-domain="ru.milovtim" registration="failOnExisting" />
    <beans:bean id="manualExporter"
                class="org.springframework.jmx.export.MBeanExporter"
                p:server-ref="mBeanServer"/>
    <beans:bean class="ru.milovtim.context.MbeansContext"
                p:trigger-ref="dynamicPeriodicTrigger"
                p:exporter-ref="manualExporter"
                p:taskExecutor-ref="worker-executor"/>
</beans:beans>